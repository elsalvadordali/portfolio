import{S as te,i as se,s as ae,e as o,t as d,k as i,c as r,a as n,h as u,d as a,m as h,b as c,g as oe,J as e,E as B}from"../../../chunks/index-9fb11939.js";function re(K){let l,t,z,w,j,v,x,P,f,H,S,p,A,G,m,T,q,b,C,D,E,F,g,N,V,_,W,$,y,J;return{c(){l=o("div"),t=o("div"),z=o("h1"),w=d("Sujiko"),j=i(),v=o("p"),x=d(`I just learned about this number puzzle game recently and decided I needed to
            make it a PWA.`),P=i(),f=o("h3"),H=d("How to play"),S=i(),p=o("p"),A=d(`The numbers in the circles are the sum of the four surrounding squares, 
            and you can only use 1-9 once. Good luck!`),G=i(),m=o("h3"),T=d("Technical"),q=i(),b=o("p"),C=d(`First we generate an array of 1-9 in random order. I debated between using an array, object, or
            even a map, but settled on array at the end because it becomes easy to cross reference against the
            user's guesses array.`),D=i(),E=o("p"),F=i(),g=o("h3"),N=d("Next Steps"),V=i(),_=o("p"),W=d(`I'd like to add levels that have various amounts of previously filled-in numbers, but for now,
            the hint button fills that need. Also, I'm still debating wether or not hints should be mutable
            or not.`),$=i(),y=o("a"),J=d("Code on Github"),this.h()},l(I){l=r(I,"DIV",{class:!0});var k=n(l);t=r(k,"DIV",{class:!0});var s=n(t);z=r(s,"H1",{});var L=n(z);w=u(L,"Sujiko"),L.forEach(a),j=h(s),v=r(s,"P",{class:!0});var M=n(v);x=u(M,`I just learned about this number puzzle game recently and decided I needed to
            make it a PWA.`),M.forEach(a),P=h(s),f=r(s,"H3",{class:!0});var O=n(f);H=u(O,"How to play"),O.forEach(a),S=h(s),p=r(s,"P",{class:!0});var Q=n(p);A=u(Q,`The numbers in the circles are the sum of the four surrounding squares, 
            and you can only use 1-9 once. Good luck!`),Q.forEach(a),G=h(s),m=r(s,"H3",{class:!0});var R=n(m);T=u(R,"Technical"),R.forEach(a),q=h(s),b=r(s,"P",{class:!0});var U=n(b);C=u(U,`First we generate an array of 1-9 in random order. I debated between using an array, object, or
            even a map, but settled on array at the end because it becomes easy to cross reference against the
            user's guesses array.`),U.forEach(a),D=h(s),E=r(s,"P",{class:!0});var ee=n(E);ee.forEach(a),F=h(s),g=r(s,"H3",{class:!0});var X=n(g);N=u(X,"Next Steps"),X.forEach(a),V=h(s),_=r(s,"P",{class:!0});var Y=n(_);W=u(Y,`I'd like to add levels that have various amounts of previously filled-in numbers, but for now,
            the hint button fills that need. Also, I'm still debating wether or not hints should be mutable
            or not.`),Y.forEach(a),s.forEach(a),$=h(k),y=r(k,"A",{href:!0});var Z=n(y);J=u(Z,"Code on Github"),Z.forEach(a),k.forEach(a),this.h()},h(){c(v,"class","svelte-1gko8oz"),c(f,"class","svelte-1gko8oz"),c(p,"class","svelte-1gko8oz"),c(m,"class","svelte-1gko8oz"),c(b,"class","svelte-1gko8oz"),c(E,"class","svelte-1gko8oz"),c(g,"class","svelte-1gko8oz"),c(_,"class","svelte-1gko8oz"),c(t,"class","column svelte-1gko8oz"),c(y,"href","https://github.com/elsalvadordali/portfolio/tree/main/src/routes/projects/todo"),c(l,"class","all svelte-1gko8oz")},m(I,k){oe(I,l,k),e(l,t),e(t,z),e(z,w),e(t,j),e(t,v),e(v,x),e(t,P),e(t,f),e(f,H),e(t,S),e(t,p),e(p,A),e(t,G),e(t,m),e(m,T),e(t,q),e(t,b),e(b,C),e(t,D),e(t,E),e(t,F),e(t,g),e(g,N),e(t,V),e(t,_),e(_,W),e(l,$),e(l,y),e(y,J)},p:B,i:B,o:B,d(I){I&&a(l)}}}function ne(K){return[]}class ce extends te{constructor(l){super(),se(this,l,ne,re,ae,{})}}export{ce as default};
